def handle_warenkorb(self):
        """Fenster zum Erstellen eines Warenkorbs für den aktuellen Kunden"""
        if not self.current_kunde:
            self.status.config(text="Bitte zuerst einen Kunden anlegen.")
            return

        self.current_warenkorb = Warenkorb(self.current_kunde)
        message = f"Warenkorb für {self.current_kunde.get_name()} wurde angelegt."
        self.current_konto.einzahlen(self.kontostand)

        kosten = 0.00

        for produkt in self.produkte_liste:
            self.current_warenkorb.fuege_produkt_hinzu(produkt)
            kosten += produkt.get_gesamtpreis()

        try:
            self.current_konto.abheben(kosten)
            self.logging.start_log(
                f"{self.current_konto.get_kontoinhaber().get_name()} ist zahlungsfaehig!",
                LogLevel.INFO,
            )
        except ValueError:
            self.logging.start_log(
                f"{self.current_konto.get_kontoinhaber().get_name()} ist insolvent!",
                LogLevel.ERROR,
            )
            self.status.config(text="❌ Kontostand reicht nicht für den Einkauf!")
            return  # abbrechen, um keinen Kassenzettel mit fehlerhaftem Zustand zu erzeugen

        items = self.current_warenkorb.erhalte_produkte()
        if not items:
            self.status.config(text="Warenkorb ist leer.")
            self.logging.start_log("Leerer Warenkorb!", LogLevel.WARNING)
            return

        message = "Artikel im Warenkorb:\n"
        for i, item in enumerate(items, 0):
            message += f"{i+1}. {item.get_bezeichnung()}\n"
        self.status.config(text=message)
        message += f"\nGesamtkosten vom Einkauf: {kosten:.2f} €"
        self.logging.start_log(message, LogLevel.INFO)

        self.status.config(text=message)
